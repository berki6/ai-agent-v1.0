{
  "name": "React Web Application",
  "description": "A modern React web application with TypeScript support",
  "language": "javascript",
  "framework": "react",
  "project_type": "web",
  "directories": [
    "public",
    "src",
    "src/components",
    "src/pages",
    "src/hooks",
    "src/utils",
    "src/styles",
    "tests",
    "docs"
  ],
  "files": {
    "public/index.html": {
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta name=\"description\" content=\"{{project_name}} - Generated by CodeForge AI\" />\n    <title>{{project_name}}</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
      "description": "Main HTML template"
    },
    "public/manifest.json": {
      "content": "{\n  \"short_name\": \"{{project_name}}\",\n  \"name\": \"{{project_name}} App\",\n  \"icons\": [],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n",
      "description": "Web app manifest"
    },
    "src/index.tsx": {
      "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",
      "description": "React application entry point"
    },
    "src/App.tsx": {
      "content": "import React from 'react';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to {{project_name}}</h1>\n        <p>Generated by CodeForge AI</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",
      "description": "Main App component"
    },
    "src/components/Button.tsx": {
      "content": "import React from 'react';\n\ninterface ButtonProps {\n  children: React.ReactNode;\n  onClick?: () => void;\n  variant?: 'primary' | 'secondary';\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, onClick, variant = 'primary' }) => {\n  return (\n    <button \n      className={`button button--${variant}`} \n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n",
      "description": "Reusable Button component"
    },
    "src/styles/index.css": {
      "content": "body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",
      "description": "Global styles"
    },
    "src/styles/App.css": {
      "content": ".App {\n  text-align: center;\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.button {\n  background-color: #61dafb;\n  border: none;\n  border-radius: 4px;\n  color: #282c34;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  margin: 10px;\n}\n\n.button:hover {\n  background-color: #21b4d6;\n}\n\n.button--secondary {\n  background-color: #282c34;\n  color: #61dafb;\n  border: 1px solid #61dafb;\n}\n\n.button--secondary:hover {\n  background-color: #61dafb;\n  color: #282c34;\n}\n",
      "description": "App-specific styles"
    },
    "package.json": {
      "content": "{\n  \"name\": \"{{project_name}}\",\n  \"version\": \"1.0.0\",\n  \"description\": \"{{project_name}} - Generated by CodeForge AI\",\n  \"main\": \"src/index.tsx\",\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"dependencies\": {\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"devDependencies\": {\n    \"@types/react\": \"^18.2.39\",\n    \"@types/react-dom\": \"^18.2.22\",\n    \"typescript\": \"^4.9.5\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n",
      "description": "NPM package configuration"
    },
    "tsconfig.json": {
      "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\n      \"dom\",\n      \"dom.iterable\",\n      \"es6\"\n    ],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\"\n  },\n  \"include\": [\n    \"src\"\n  ]\n}\n",
      "description": "TypeScript configuration"
    },
    "README.md": {
      "content": "# {{project_name}}\n\nA React web application generated by CodeForge AI.\n\n## Features\n\n- React 18 with TypeScript\n- Modern component architecture\n- Responsive design\n- Testing setup with Jest\n\n## Installation\n\n```bash\nnpm install\n```\n\n## Running\n\n```bash\nnpm start\n```\n\n## Building\n\n```bash\nnpm run build\n```\n\n## Testing\n\n```bash\nnpm test\n```\n",
      "description": "Project README"
    },
    ".gitignore": {
      "content": "# Dependencies\nnode_modules/\n\n# Production\nbuild/\n\n# Environment\n.env\n.env.local\n\n# IDE\n.vscode/\n.idea/\n\n# OS\n.DS_Store\nThumbs.db\n\n# Logs\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n",
      "description": "Git ignore patterns"
    },
    "tests/App.test.tsx": {
      "content": "import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport App from '../src/App';\n\ntest('renders welcome message', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/Welcome to {{project_name}}/i);\n  expect(linkElement).toBeInTheDocument();\n});\n",
      "description": "Basic component test"
    }
  },
  "dependencies": {
    "package_manager": "npm",
    "dependencies": [
      "react@^18.2.0",
      "react-dom@^18.2.0",
      "react-scripts@5.0.1"
    ],
    "dev_dependencies": [
      "@types/react@^18.2.39",
      "@types/react-dom@^18.2.22",
      "typescript@^4.9.5",
      "@testing-library/react",
      "@testing-library/jest-dom"
    ]
  },
  "scripts": {
    "start": "npm start",
    "build": "npm run build",
    "test": "npm test",
    "dev": "npm start",
    "lint": "npm run lint"
  },
  "configuration": {
    "additional_setup_steps": [
      "Install dependencies: npm install",
      "Start development server: npm start",
      "Run tests: npm test",
      "Build for production: npm run build"
    ]
  }
}
